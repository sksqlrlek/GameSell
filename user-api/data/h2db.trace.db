2025-06-04 22:12:08.411243+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:12:08.422242+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:12:08.424242+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:40:40.087836+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:40:40.099124+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:40:40.100124+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:43:05.180367+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:43:05.189367+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:43:05.191367+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:46:22.716535+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:46:22.725455+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:46:22.727455+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:47:18.850866+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:47:18.859865+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:47:18.860865+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:48:47.734946+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:48:47.743939+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:48:47.744939+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:50:10.996367+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:50:11.005367+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:50:11.007367+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:52:26.173472+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:52:26.182465+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:52:26.183467+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:53:46.459526+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:53:46.469526+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:53:46.471526+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:53:58.215278+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:53:58.224278+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:53:58.225278+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:55:13.559874+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:55:13.568874+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:55:13.570873+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:56:50.546066+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:56:50.554059+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:56:50.556059+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 22:58:33.793863+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 22:58:33.802857+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 22:58:33.804857+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 23:00:13.219879+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 23:00:13.228990+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 23:00:13.230991+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 23:01:15.217576+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 23:01:15.226576+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 23:01:15.228576+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 23:01:40.839225+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 23:01:40.849217+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 23:01:40.851216+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 23:01:46.859514+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 23:01:46.869507+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 23:01:46.870513+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 23:03:14.013356+09:00 jdbc[7]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:465)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:49)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.getIsolatedConnection(GenerationTargetToDatabase.java:60)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.jdbcStatement(GenerationTargetToDatabase.java:112)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:79)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:381)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-06-04 23:03:14.017356+09:00 jdbc[7]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:660)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:258)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:442)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:106)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:134)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:160)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-06-04 23:03:20.336840+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 23:03:20.345833+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 23:03:20.346833+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
2025-06-04 23:04:09.118898+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
2025-06-04 23:04:09.128550+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id))"; expected "identifier"; SQL statement:
create table user (age integer not null, gender varchar(1) not null, verify boolean not null, created_at timestamp(6), id bigint generated by default as identity, modified_at timestamp(6), verify_expired_at timestamp(6), password varchar(50) not null, email varchar(100) not null unique, verification_code varchar(255), role enum ('CUSTOMER','SELLER'), primary key (id)) [42001-224]
2025-06-04 23:04:09.130549+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists seller add constraint FKaqjn1ppqads72a0js4g7044eq foreign key (id) references user [42001-224]
